---

name: CI
on:
  pull_request:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    outputs:
      coverage_id: ${{ steps.coverage_id.outputs.value }}
    permissions:
      packages: read
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            go-
      - run: go mod download
      - name: test
        run: |
          go test -race -coverprofile=coverage.out ./...
      - id: coverage_id
        env:
          _value: go-coverage-${{ github.run_id }}-${{ github.run_attempt }}
        run: |
          echo "value=${_value}" >> $GITHUB_OUTPUT
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.coverage_id.outputs.value }}
          path: ./coverage.out
          if-no-files-found: error
  report-coverage:
    permissions:
      actions: read
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: ${{ needs.test.outputs.coverage_id }}
      - name: report coverage
        uses: k1LoW/octocov-action@v0
  lint:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
      - uses: reviewdog/action-golangci-lint@v2
        with:
          github_token: ${{ github.token }}
          level: warning
          reporter: github-pr-review
          filter_mode: file
